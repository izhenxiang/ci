name: build
on: 
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  build:
    name: build
    strategy:
      matrix:
        # platform: [windows-latest] 
        # platform: [macos-latest]
        platform: [macos-latest,windows-latest]
        python-version: [3.9]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/setup-node@v2
        with:
          node-version: '17.4.0'
      
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # See: https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
      
      - name: pip3 install
        run: |
          pip3 install -r requirements.txt
      
      - name: 苹果系统初始化
        if: startsWith(matrix.platform, 'macos')
        run: |
          brew install coreutils

      - name: build
        env:
          DEBUG: electron-osx-sign*
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          PYTHONIOENCODING: utf8
          accessKeyId: ${{ secrets.ACCESSKEYID }}
          accessKeySecret: ${{ secrets.ACCESSKEYSECRET }}
          PUSHPLUS_TOKEN: ${{ secrets.PUSHPLUS_TOKEN }}
          FEISHU_BOT: ${{ secrets.FEISHU_BOT }}
        run: ./dist.sh
        shell: bash
    
